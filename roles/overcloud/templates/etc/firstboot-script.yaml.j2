heat_template_version: 2014-10-16
description: >
  Extra hostname configuration
resources:
  userdata:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: nameserver_config}
  nameserver_config:
    type: OS::Heat::SoftwareConfig
    properties:
      config: |
        #!/bin/bash
        cat > /etc/yum.repos.d/rhosp.repo << EOF
        [rhel-7-server-extras-rpms]
        name=rhel-7-server-extras-rpms
        baseurl=http://{{ repo.ip }}/rhosp13/rhel-7-server-extras-rpms/
        enabled=1
        gpgcheck=0

        [rhel-7-server-openstack-13-rpms]
        name=rhel-7-server-openstack-13-rpms
        baseurl=http://{{ repo.ip }}/rhosp13/rhel-7-server-openstack-13-rpms/
        enabled=1
        gpgcheck=0

        [rhel-7-server-rh-common-rpms]
        name=rhel-7-server-rh-common-rpms
        baseurl=http://{{ repo.ip }}/rhosp13/rhel-7-server-rh-common-rpms/
        enabled=1
        gpgcheck=0

        [rhel-7-server-rpms]
        name=rhel-7-server-rpms
        baseurl=http://{{ repo.ip }}/rhosp13/rhel-7-server-rpms/
        enabled=1
        gpgcheck=0

        [rhel-ha-for-rhel-7-server-rpms]
        name=rhel-ha-for-rhel-7-server-rpms
        baseurl=http://{{ repo.ip }}/rhosp13/rhel-ha-for-rhel-7-server-rpms/
        enabled=1
        gpgcheck=0
        EOF

        echo 'skt!234' | passwd --stdin root
        echo "IRQBALANCE_ONESHOT=yes" >> /etc/sysconfig/irqbalance
        yum install -y sysstat vim bash-completion tcpdump

        # ZAP Disk : /dev/${DEVICE} nova instance data partition
        if [[ "$(hostname)" =~ "comp" ]]; then
          echo "Number of disks detected: $(lsblk -no NAME,TYPE,MOUNTPOINT | grep "disk" | awk '{print $1}' | wc -l)"
          for DEVICE in `lsblk -no NAME,TYPE,MOUNTPOINT | grep "disk" | awk '{print $1}'`
          do
            ROOTFOUND=0
            echo "Checking /dev/${DEVICE}..."
            echo "Number of partitions on /dev/${DEVICE}: $(expr $(lsblk -n /dev/${DEVICE} | awk '{print $7}' | wc -l) - 1)"
            for MOUNTS in `lsblk -n /dev/${DEVICE} | awk '{print $7}'`
            do
              if [[ "$MOUNTS" = "/" ]]
              then
                ROOTFOUND=1
              fi
            done
            if [[ $ROOTFOUND = 0 ]]
            then
              echo "Root not found in /dev/${DEVICE}"
              echo "Wiping disk /dev/${DEVICE}"
              sgdisk --zap-all --clear --mbrtogpt /dev/${DEVICE}
            else
              echo "Root found in /dev/${DEVICE}"
            fi
          done
        fi

        if [[ "$(hostname)" =~ "comp" ]]; then
          #standard_partition
          #parted -s /dev/${DEVICE} mklabel gpt 
          #parted -s /dev/${DEVICE} mkpart primary 2048 100%
          #mkfs.xfs -L hostvolume /dev/${DEVICE}1
          #echo "/dev/${DEVICE}1 /var/lib/nova/instances xfs defaults,_netdev 0 0" >> /etc/fstab
          #mount -a
          #chown -R nova:nova /var/lib/nova/instances
          #restorecon -RF /var/lib/nova/instances

          # lvm
          parted -s /dev/sdb mklabel gpt
          parted -s /dev/sdb mkpart primary 2048 100%
          pvcreate /dev/sdb1
          vgcreate vg-compute /dev/sdb1
          lvcreate -y -l 100%FREE -n hostvolume vg-compute
          mkfs.xfs -L hostvolume /dev/vg-compute/hostvolume
          echo "/dev/vg-compute/hostvolume /var/lib/nova/instances xfs defaults,_netdev 0 0" >> /etc/fstab
          mount -a
          chown -R nova:nova /var/lib/nova/instances
          restorecon -RF /var/lib/nova/instances
        fi
outputs:
  OS::stack_id:
    value: {get_resource: userdata}

